;*******************************************************************************
;*                                                                            **
;*                     I N T E L   P R O P R I E T A R Y                      **
;*                                                                            **
;*   COPYRIGHT (c) 1993-1999 BY INTEL CORPORATION. ALL RIGHTS RESERVED.  NO   **
;*   PART  OF  THIS  PROGRAM OR PUBLICATION MAY BE REPRODUCED, TRANSMITTED,   **
;*   TRANSCRIBED, STORED IN A RETRIEVAL  SYSTEM,  OR  TRANSLATED  INTO  ANY   **
;*   LANGUAGE OR COMPUTER LANGUAGE IN ANY FORM OR BY ANY MEANS, ELECTRONIC,   **
;*   MECHANICAL, MAGNETIC, OPTICAL, CHEMICAL, MANUAL, OR OTHERWISE, WITHOUT   **
;*   THE PRIOR WRITTEN PERMISSION OF :                                        **
;*                                                                            **
;*                             INTEL CORPORATION                              **
;*                                                                            **
;*                          2200 MISSON COLLEGE BLVD                          **
;*                                                                            **
;*                     SANTA CLARA, CALIFORNIA 95052-8119                     **
;*                                                                            **
;*******************************************************************************
;***********************************************************************
; Windows NT OEMSETUP.INF for
;
;		Intel(R) PRO/100+ PCI Adapter
;
; Copyright© 1994-1999 Intel Corporation.  All rights reserved.
;***********************************************************************
; $Revision: 47 $
;
;***********************************************************************
; Define constants
;***********************************************************************
[FileConstants]
	Manufacturer  = "Intel"
	ModemEnabler  = "Cbmodem.sys"
	NDIS3         = "E100b.sys"
	NDIS4         = "E100bnt.sys"
	IAFT          = "iAFT.sys"
	IVLAN         = "iVLAN.sys"
	PROSet        = "PROSetp.cpl"
	PROMon        = "PROMon.exe"
	PROKdd        = "PROKddp.sys"
	PROdd         = "PROdd.sys"
	PROSetHelp    = "PROSetp.hlp"
	PROSetCnt     = "PROSetp.cnt"
	PROSetOld     = "PROSet.cpl"

	ProCaption   = "Windows NT Setup"
	ProCancel    = "Cancel"
	ProCancelMsg = "Windows NT Networking is not correctly installed.  " +
			"Are you sure you want to cancel copying files?"
	ProCancelCap = "Network Setup Message"
	ProText1     = "Copying:"
	ProText2     = "To:"

;***********************************************************************
; Define file source constants.  
;***********************************************************************
[FileConstants-Src]
	ModemEnablerSrc = "Cbmodem.sys"
	NDIS3Src        = "E100b.sys"
	NDIS4Src        = "E100bnt.sys"
	IAFTSrc         = "iAFT.sys"
	IVLANSrc        = "iVLAN.sys"
	PROSetSrc       = "PROSetp.cpl"
	PROMonSrc       = "PROMon.exe"
	PROKddSrc       = "PROKddp.sys"
	PROddSrc        = "PROdd.sys"
	PROSetHelpSrc   = "PROSetp.hlp"
	PROSetCntSrc    = "PROSetp.cnt"

;***********************************************************************
; Detect sections
;***********************************************************************
[DetectConstants]
OSName = {} ? $(PROSet) GetOSVersion

;***********************************************************************
; Define Option
;***********************************************************************
[Options]
	E100B
	E100BEXP
	E100BPCI
	E10PPCI
	E100BRWA

[OptionsText]
	E100B = "Intel(R) PRO Adapter"

[Source Media Descriptions]
	1 = "Intel PRO Adapter CD-ROM or floppy disk", TAGFILE = d100disk

;***********************************************************************
; Returns information to Setup about the type of driver or drivers that
; can be installed by this INF file.
;***********************************************************************
[Identify]
	Return STATUS_SUCCESSFUL NetAdapter ""

;***********************************************************************
; This section returns information to the Setup program, listing the 
; names of any drivers that can be installed by this INF file. It also 
; returns the text strings for each driver (in the requested language) 
; to be used in the dialog box that asks the user to select the driver
; to install. 
;***********************************************************************
[ReturnOptions]
	Set Status         = STATUS_SUCCESSFUL
	Set OptionList     = ^(Options, 1)
	Set OptionTextList = ^(OptionsText, 1)

	IfStr(i) $($1) != ""
		IfContains(i) $($1) not-in "PCI"
			Set Status         = STATUS_NOTSUPPORTED
			Set OptionList     = {}
			Set OptionTextList = {}
		EndIf
	EndIf

	Return $(Status) $(OptionList) $(OptionTextList)

;***********************************************************************
; If the [ReturnOptions] section returns successfully, indicating the
; language is supported, Setup displays a dialog box from which the user
; can select a driver to install. If the user proceeds with the
; installation, Setup calls the [InstallOption] section.
;***********************************************************************
[InstallOption]
	Set Option   = $($1)
	Set SrcDir   = $($2)
	Set AddCopy  = $($3)
	Set DoCopy   = $($4)
	Set DoConfig = $($5)

	read-syms FileConstants
	read-syms FileConstants-Src

	IfStr(i) $(!NTN_InstallMode) == deinstall
		Set StartLabel = RemoveAdapter

	Else-IfStr(i) $(!NTN_InstallMode) == update
		Set StartLabel = UpdateAdapters

	Else-IfStr(i) $(!NTN_InstallMode) == bind
		Set StartLabel = BindingReview

	Else-IfStr(i) $(!NTN_InstallMode) == configure
		Set StartLabel = ConfigureAdapter

	Else-IfStr(i) $(!NTN_InstallMode) == install
		Set StartLabel = InstallAdapters

	EndIf

	Set from = FatalError
	Set to   = FatalError

	Goto $(StartLabel)

;***********************************************************************
; Called when the user clicks the Add button in the NCPA.
;***********************************************************************
InstallAdapters = +

	Install "Install-PROSet"

	LoadLibrary "" $(PROSet) hLib
	LibraryProcedure DllExitStr $(hLib) InstallAdapters +
		$(Option), $(PROMon), $(STF_CONTEXTINFNAME), +
		$(!NetCardParameterName), $(!NetCardParameterValue), +
		$(!STF_GUI_UNATTENDED)
	FreeLibrary $(hLib)

	Ifstr(i) $(DllExitStr) == "ERROR"
		return STATUS_USERCANCEL
	EndIf

	detect DetectConstants

	Install "Install-Option"
	Install "Install-PROSet-More"

	return STATUS_SUCCESSFUL

;***********************************************************************
; Called when the user clicks the Update button in the NCPA.
;***********************************************************************
UpdateAdapters = +

	Install "Install-PROSet"

	LoadLibrary "" $(PROSet) hLib
	LibraryProcedure DllExitStr $(hLib) UpdateAdapters +
		$(PROMon), $(!NTN_RegBase)
	FreeLibrary $(hLib)

	Ifstr(i) $(DllExitStr) == "ERROR"
		return STATUS_USERCANCEL
	EndIf

	Set NewInfName = $(DllExitStr)

	detect DetectConstants

	Install "Install-Option"
	Install "Install-PROSet-More"

	return STATUS_SUCCESSFUL

;***********************************************************************
; Called when the binding engine runs and the software component has a
; Review = 1 flag in the CurrentVersion key of the software component
; key.
;***********************************************************************
BindingReview = +

	LoadLibrary "" $(PROSet) hLib
	LibraryProcedure DllExitStr $(hLib) BindingReview $(Option)
	FreeLibrary $(hLib)

	return STATUS_SUCCESSFUL

;***********************************************************************
; Called when user clicks the Remove button on the NCPA to remove an
; adapter.  We only need to remove the hardware components; the NCPA
; will remove the software component when the last hardware component
; is removed.  This function is also used to remove adapter teams.
;***********************************************************************
RemoveAdapter = +

	LoadLibrary "" $(PROSet) hLib
	LibraryProcedure DllExitStr $(hLib) RemoveAdapter +
		$(Option), $(!NTN_RegBase)
	FreeLibrary $(hLib)

	Ifstr(i) $(DllExitStr) == "CLEANUP"
		Install "Install-Cleanup"
		Install "Install-PROMon-Cleanup"
	EndIf
	
	return STATUS_SUCCESSFUL

;***********************************************************************
; Called when the user selects Properties button on an adapter.
;***********************************************************************
ConfigureAdapter = +
	
	LoadLibrary "" $(PROSet) hLib
	LibraryProcedure DllExitStr $(hLib) DLLEntry +
		$(!NTN_RegBase), $(Option)
	FreeLibrary $(hLib)

	Ifstr(i) $(DllExitStr) == "REBOOT"
		return STATUS_SUCCESSFUL
	EndIf

	return STATUS_USERCANCEL

;***********************************************************************
; Something's busted!
;***********************************************************************
FatalError = +

	return STATUS_FAILED


;***********************************************************************
; Install the PROSet files.
;***********************************************************************
[Install-PROSet]
	Set STF_VITAL = 1
	Set STF_OVERWRITE	 = "VERIFYSOURCEOLDER"

	AddSectionFilesToCopyList Files-PROSet-Drivers $(SrcDir) +
		$(!STF_WINDOWSSYSPATH)\drivers
	AddSectionFilesToCopyList Files-PROSet-System $(SrcDir) +
		$(!STF_WINDOWSSYSPATH)

	Set !STF_NCPA_FLUSH_COPYLIST = 1
	CopyFilesInCopyList

	Exit

[Files-PROSet-Drivers]
	1, $(PROKddSrc),     SIZE=50000, RENAME=$(PROKdd)
	1, $(PROddSrc),      SIZE=50000, RENAME=$(PROdd)

[Files-PROSet-System]
	1, $(PROSetSrc),     SIZE=50000, RENAME=$(PROSet)
	1, $(PROMonSrc),     SIZE=50000, RENAME=$(PROMon)
	1, $(PROSetHelpSrc), SIZE=50000, RENAME=$(PROSetHelp)
	1, $(PROSetCntSrc),  SIZE=50000, RENAME=$(PROSetCnt)

;***********************************************************************
; Finish up the install of PROSet
;***********************************************************************
[Install-PROSet-More]

	; Install PROMon to run each time NT 4 starts
	IfStr(i) $(OSName) == "NT4"
		OpenRegKey $(!REG_H_LOCAL) "" +
			"SOFTWARE\Microsoft\Windows\CurrentVersion\Run" +
			$(!REG_KEY_SET_VALUE) KeyWinRun
		SetRegValue $(KeyWinRun) {$(PROMon), 0, $(!REG_VT_SZ), $(PROMon)}
		CloseRegKey $(KeyWinRun)
	EndIf

	; Remove Old PROSet
	AddFileToDeleteList $(PROSetOld)

	Exit

;***********************************************************************
; Remove PROMon hook
;***********************************************************************
[Install-PROMon-Cleanup]

	OpenRegKey $(!REG_H_LOCAL) "" +
		"SOFTWARE\Microsoft\Windows\CurrentVersion\Run" +
		$(!REG_KEY_SET_VALUE) KeyWinRun
	DeleteRegValue $(KeyWinRun) $(PROMon)
	CloseRegKey $(KeyWinRun)

	Exit

;***********************************************************************
; Install the Option files.
;***********************************************************************
[Install-Option]
	Set STF_VITAL = 1
	Set STF_OVERWRITE = "VERIFYSOURCEOLDER"

	; Prior to installing the drivers, lets see if the install media has the AFT 
	; driver and the VLAN driver.  

	IfStr(i) $(OSName) == "NT4"
		set FileToCheck = $(SrcDir)$(ModemEnablerSrc)
		LibraryProcedure ModemEnablerFilePresent,$(!LIBHANDLE), CheckFileExistance $(FileToCheck)
		set FileToCheck = $(SrcDir)$(IAFTSrc)
		LibraryProcedure AftFilePresent,$(!LIBHANDLE), CheckFileExistance $(FileToCheck)
		set FileToCheck = $(SrcDir)$(IVLANSrc)
		LibraryProcedure VlanFilePresent,$(!LIBHANDLE), CheckFileExistance $(FileToCheck)

		Ifstr(i) $(ModemEnablerFilePresent) == "YES"
			AddSectionFilesToCopyList Files-Option-Drivers-NT4-ModemEnabler $(SrcDir) $(!STF_WINDOWSSYSPATH)\drivers
		Endif

		Ifstr(i) $(AftFilePresent) == "YES"
			AddSectionFilesToCopyList Files-Option-Drivers-NT4-Aft $(SrcDir) $(!STF_WINDOWSSYSPATH)\drivers
		Endif

		Ifstr(i) $(VlanFilePresent) == "YES"
			AddSectionFilesToCopyList Files-Option-Drivers-NT4-Vlan $(SrcDir) $(!STF_WINDOWSSYSPATH)\drivers
		Endif
	Endif

	Set FilesOptionDrivers = "Files-Option-Drivers-"$(OSName)

	AddSectionFilesToCopyList $(FilesOptionDrivers) $(SrcDir) +
		$(!STF_WINDOWSSYSPATH)\drivers
	
	IfStr(i) $(NewInfName) != ""
		AddSectionFilesToCopyList Files-Option-Inf $(SrcDir) +
			$(!STF_WINDOWSSYSPATH)
	EndIf

	Set !STF_NCPA_FLUSH_COPYLIST = 1
	CopyFilesInCopyList

	Exit

[Files-Option-Drivers-NT351]
	1, $(NDIS3Src), SIZE=50000, RENAME=$(NDIS3)

[Files-Option-Drivers-NT4]
	1, $(NDIS4Src), SIZE=50000, RENAME=$(NDIS4)

[Files-Option-Drivers-NT4-ModemEnabler]
	1, $(ModemEnablerSrc), SIZE=50000, RENAME=$(ModemEnabler)

[Files-Option-Drivers-NT4-Aft]
	1, $(IAFTSrc),  SIZE=50000, RENAME=$(IAFT)

[Files-Option-Drivers-NT4-Vlan]
	1, $(IVLANSrc), SIZE=50000, RENAME=$(IVLAN)

[Files-Option-Inf]
	1, OEMSETUP.INF,   SIZE=50000, RENAME=$(NewInfName), +
		OVERWRITE=ALWAYS

;***********************************************************************
; Clean system of adapter files.
;***********************************************************************
[Install-Cleanup]

	AddFileToDeleteList drivers\$(NDIS3)
	AddFileToDeleteList drivers\$(NDIS4)
	AddFileToDeleteList drivers\$(IAFT)
	AddFileToDeleteList drivers\$(IVLAN)

	AddFileToDeleteList $(PROSet)
	AddFileToDeleteList $(PROMon)
	AddFileToDeleteList drivers\$(PROKdd)
	AddFileToDeleteList drivers\$(PROdd)
	AddFileToDeleteList $(PROSetHelp)
	AddFileToDeleteList $(PROSetCnt)

	Exit